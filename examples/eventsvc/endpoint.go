// Code generated by kun; DO NOT EDIT.
// github.com/RussellLuo/kun

package eventsvc

import (
	"context"

	"github.com/RussellLuo/kun/pkg/httpoption"
	"github.com/RussellLuo/validating/v2"
	"github.com/go-kit/kit/endpoint"
)

type EventCreatedRequest struct {
	Id int `json:"id"`
}

// ValidateEventCreatedRequest creates a validator for EventCreatedRequest.
func ValidateEventCreatedRequest(newSchema func(*EventCreatedRequest) validating.Schema) httpoption.Validator {
	return httpoption.FuncValidator(func(value interface{}) error {
		req := value.(*EventCreatedRequest)
		return httpoption.Validate(newSchema(req))
	})
}

type EventCreatedResponse struct {
	Err error `json:"-"`
}

func (r *EventCreatedResponse) Body() interface{} { return r }

// Failed implements endpoint.Failer.
func (r *EventCreatedResponse) Failed() error { return r.Err }

// MakeEndpointOfEventCreated creates the endpoint for s.EventCreated.
func MakeEndpointOfEventCreated(s Service) endpoint.Endpoint {
	return func(ctx context.Context, request interface{}) (interface{}, error) {
		req := request.(*EventCreatedRequest)
		err := s.EventCreated(
			ctx,
			req.Id,
		)
		return &EventCreatedResponse{
			Err: err,
		}, nil
	}
}
