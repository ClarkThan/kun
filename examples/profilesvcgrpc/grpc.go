// Code generated by kok; DO NOT EDIT.
// github.com/RussellLuo/kok

package profilesvcgrpc

import (
	"context"

	"github.com/RussellLuo/kok/examples/profilesvcgrpc/pb"
	"github.com/RussellLuo/kok/pkg/grpccodec"
	kitgrpc "github.com/go-kit/kit/transport/grpc"
)

type grpcServer struct {
	pb.UnimplementedServiceServer

	deleteAddress kitgrpc.Handler
	deleteProfile kitgrpc.Handler
	getAddress    kitgrpc.Handler
	getAddresses  kitgrpc.Handler
	getProfile    kitgrpc.Handler
	patchProfile  kitgrpc.Handler
	postAddress   kitgrpc.Handler
	postProfile   kitgrpc.Handler
	putProfile    kitgrpc.Handler
}

func (s *grpcServer) DeleteAddress(ctx context.Context, req *pb.DeleteAddressRequest) (*pb.DeleteAddressResponse, error) {
	_, resp, err := s.deleteAddress.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return resp.(*pb.DeleteAddressResponse), nil
}

func (s *grpcServer) DeleteProfile(ctx context.Context, req *pb.DeleteProfileRequest) (*pb.DeleteProfileResponse, error) {
	_, resp, err := s.deleteProfile.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return resp.(*pb.DeleteProfileResponse), nil
}

func (s *grpcServer) GetAddress(ctx context.Context, req *pb.GetAddressRequest) (*pb.GetAddressResponse, error) {
	_, resp, err := s.getAddress.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return resp.(*pb.GetAddressResponse), nil
}

func (s *grpcServer) GetAddresses(ctx context.Context, req *pb.GetAddressesRequest) (*pb.GetAddressesResponse, error) {
	_, resp, err := s.getAddresses.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return resp.(*pb.GetAddressesResponse), nil
}

func (s *grpcServer) GetProfile(ctx context.Context, req *pb.GetProfileRequest) (*pb.GetProfileResponse, error) {
	_, resp, err := s.getProfile.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return resp.(*pb.GetProfileResponse), nil
}

func (s *grpcServer) PatchProfile(ctx context.Context, req *pb.PatchProfileRequest) (*pb.PatchProfileResponse, error) {
	_, resp, err := s.patchProfile.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return resp.(*pb.PatchProfileResponse), nil
}

func (s *grpcServer) PostAddress(ctx context.Context, req *pb.PostAddressRequest) (*pb.PostAddressResponse, error) {
	_, resp, err := s.postAddress.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return resp.(*pb.PostAddressResponse), nil
}

func (s *grpcServer) PostProfile(ctx context.Context, req *pb.PostProfileRequest) (*pb.PostProfileResponse, error) {
	_, resp, err := s.postProfile.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return resp.(*pb.PostProfileResponse), nil
}

func (s *grpcServer) PutProfile(ctx context.Context, req *pb.PutProfileRequest) (*pb.PutProfileResponse, error) {
	_, resp, err := s.putProfile.ServeGRPC(ctx, req)
	if err != nil {
		return nil, err
	}
	return resp.(*pb.PutProfileResponse), nil
}

func NewGRPCServer(svc Service, codecs grpccodec.Codecs) pb.ServiceServer {
	s := new(grpcServer)
	var codec grpccodec.Codec

	codec = codecs.EncodeDecoder("DeleteAddress")
	s.deleteAddress = kitgrpc.NewServer(
		MakeEndpointOfDeleteAddress(svc),
		decodeDeleteAddressRequest(codec),
		encodeDeleteAddressResponse(codec),
	)

	codec = codecs.EncodeDecoder("DeleteProfile")
	s.deleteProfile = kitgrpc.NewServer(
		MakeEndpointOfDeleteProfile(svc),
		decodeDeleteProfileRequest(codec),
		encodeDeleteProfileResponse(codec),
	)

	codec = codecs.EncodeDecoder("GetAddress")
	s.getAddress = kitgrpc.NewServer(
		MakeEndpointOfGetAddress(svc),
		decodeGetAddressRequest(codec),
		encodeGetAddressResponse(codec),
	)

	codec = codecs.EncodeDecoder("GetAddresses")
	s.getAddresses = kitgrpc.NewServer(
		MakeEndpointOfGetAddresses(svc),
		decodeGetAddressesRequest(codec),
		encodeGetAddressesResponse(codec),
	)

	codec = codecs.EncodeDecoder("GetProfile")
	s.getProfile = kitgrpc.NewServer(
		MakeEndpointOfGetProfile(svc),
		decodeGetProfileRequest(codec),
		encodeGetProfileResponse(codec),
	)

	codec = codecs.EncodeDecoder("PatchProfile")
	s.patchProfile = kitgrpc.NewServer(
		MakeEndpointOfPatchProfile(svc),
		decodePatchProfileRequest(codec),
		encodePatchProfileResponse(codec),
	)

	codec = codecs.EncodeDecoder("PostAddress")
	s.postAddress = kitgrpc.NewServer(
		MakeEndpointOfPostAddress(svc),
		decodePostAddressRequest(codec),
		encodePostAddressResponse(codec),
	)

	codec = codecs.EncodeDecoder("PostProfile")
	s.postProfile = kitgrpc.NewServer(
		MakeEndpointOfPostProfile(svc),
		decodePostProfileRequest(codec),
		encodePostProfileResponse(codec),
	)

	codec = codecs.EncodeDecoder("PutProfile")
	s.putProfile = kitgrpc.NewServer(
		MakeEndpointOfPutProfile(svc),
		decodePutProfileRequest(codec),
		encodePutProfileResponse(codec),
	)

	return s
}

// decodeDeleteAddressRequest converts a gRPC request to an endpoint request.
func decodeDeleteAddressRequest(codec grpccodec.Codec) kitgrpc.DecodeRequestFunc {
	return func(_ context.Context, grpcReq interface{}) (interface{}, error) {
		var req DeleteAddressRequest
		pb := grpcReq.(*pb.DeleteAddressRequest)
		if err := codec.DecodeRequest(pb, &req); err != nil {
			return nil, err
		}
		return &req, nil
	}
}

// encodeDeleteAddressResponse converts an endpoint response to a gRPC response.
func encodeDeleteAddressResponse(codec grpccodec.Codec) kitgrpc.EncodeResponseFunc {
	return func(_ context.Context, response interface{}) (interface{}, error) {
		pb := new(pb.DeleteAddressResponse)
		resp := response.(*DeleteAddressResponse)
		if err := codec.EncodeResponse(resp, pb); err != nil {
			return nil, err
		}
		return pb, nil
	}
}

// decodeDeleteProfileRequest converts a gRPC request to an endpoint request.
func decodeDeleteProfileRequest(codec grpccodec.Codec) kitgrpc.DecodeRequestFunc {
	return func(_ context.Context, grpcReq interface{}) (interface{}, error) {
		var req DeleteProfileRequest
		pb := grpcReq.(*pb.DeleteProfileRequest)
		if err := codec.DecodeRequest(pb, &req); err != nil {
			return nil, err
		}
		return &req, nil
	}
}

// encodeDeleteProfileResponse converts an endpoint response to a gRPC response.
func encodeDeleteProfileResponse(codec grpccodec.Codec) kitgrpc.EncodeResponseFunc {
	return func(_ context.Context, response interface{}) (interface{}, error) {
		pb := new(pb.DeleteProfileResponse)
		resp := response.(*DeleteProfileResponse)
		if err := codec.EncodeResponse(resp, pb); err != nil {
			return nil, err
		}
		return pb, nil
	}
}

// decodeGetAddressRequest converts a gRPC request to an endpoint request.
func decodeGetAddressRequest(codec grpccodec.Codec) kitgrpc.DecodeRequestFunc {
	return func(_ context.Context, grpcReq interface{}) (interface{}, error) {
		var req GetAddressRequest
		pb := grpcReq.(*pb.GetAddressRequest)
		if err := codec.DecodeRequest(pb, &req); err != nil {
			return nil, err
		}
		return &req, nil
	}
}

// encodeGetAddressResponse converts an endpoint response to a gRPC response.
func encodeGetAddressResponse(codec grpccodec.Codec) kitgrpc.EncodeResponseFunc {
	return func(_ context.Context, response interface{}) (interface{}, error) {
		pb := new(pb.GetAddressResponse)
		resp := response.(*GetAddressResponse)
		if err := codec.EncodeResponse(resp, pb); err != nil {
			return nil, err
		}
		return pb, nil
	}
}

// decodeGetAddressesRequest converts a gRPC request to an endpoint request.
func decodeGetAddressesRequest(codec grpccodec.Codec) kitgrpc.DecodeRequestFunc {
	return func(_ context.Context, grpcReq interface{}) (interface{}, error) {
		var req GetAddressesRequest
		pb := grpcReq.(*pb.GetAddressesRequest)
		if err := codec.DecodeRequest(pb, &req); err != nil {
			return nil, err
		}
		return &req, nil
	}
}

// encodeGetAddressesResponse converts an endpoint response to a gRPC response.
func encodeGetAddressesResponse(codec grpccodec.Codec) kitgrpc.EncodeResponseFunc {
	return func(_ context.Context, response interface{}) (interface{}, error) {
		pb := new(pb.GetAddressesResponse)
		resp := response.(*GetAddressesResponse)
		if err := codec.EncodeResponse(resp, pb); err != nil {
			return nil, err
		}
		return pb, nil
	}
}

// decodeGetProfileRequest converts a gRPC request to an endpoint request.
func decodeGetProfileRequest(codec grpccodec.Codec) kitgrpc.DecodeRequestFunc {
	return func(_ context.Context, grpcReq interface{}) (interface{}, error) {
		var req GetProfileRequest
		pb := grpcReq.(*pb.GetProfileRequest)
		if err := codec.DecodeRequest(pb, &req); err != nil {
			return nil, err
		}
		return &req, nil
	}
}

// encodeGetProfileResponse converts an endpoint response to a gRPC response.
func encodeGetProfileResponse(codec grpccodec.Codec) kitgrpc.EncodeResponseFunc {
	return func(_ context.Context, response interface{}) (interface{}, error) {
		pb := new(pb.GetProfileResponse)
		resp := response.(*GetProfileResponse)
		if err := codec.EncodeResponse(resp, pb); err != nil {
			return nil, err
		}
		return pb, nil
	}
}

// decodePatchProfileRequest converts a gRPC request to an endpoint request.
func decodePatchProfileRequest(codec grpccodec.Codec) kitgrpc.DecodeRequestFunc {
	return func(_ context.Context, grpcReq interface{}) (interface{}, error) {
		var req PatchProfileRequest
		pb := grpcReq.(*pb.PatchProfileRequest)
		if err := codec.DecodeRequest(pb, &req); err != nil {
			return nil, err
		}
		return &req, nil
	}
}

// encodePatchProfileResponse converts an endpoint response to a gRPC response.
func encodePatchProfileResponse(codec grpccodec.Codec) kitgrpc.EncodeResponseFunc {
	return func(_ context.Context, response interface{}) (interface{}, error) {
		pb := new(pb.PatchProfileResponse)
		resp := response.(*PatchProfileResponse)
		if err := codec.EncodeResponse(resp, pb); err != nil {
			return nil, err
		}
		return pb, nil
	}
}

// decodePostAddressRequest converts a gRPC request to an endpoint request.
func decodePostAddressRequest(codec grpccodec.Codec) kitgrpc.DecodeRequestFunc {
	return func(_ context.Context, grpcReq interface{}) (interface{}, error) {
		var req PostAddressRequest
		pb := grpcReq.(*pb.PostAddressRequest)
		if err := codec.DecodeRequest(pb, &req); err != nil {
			return nil, err
		}
		return &req, nil
	}
}

// encodePostAddressResponse converts an endpoint response to a gRPC response.
func encodePostAddressResponse(codec grpccodec.Codec) kitgrpc.EncodeResponseFunc {
	return func(_ context.Context, response interface{}) (interface{}, error) {
		pb := new(pb.PostAddressResponse)
		resp := response.(*PostAddressResponse)
		if err := codec.EncodeResponse(resp, pb); err != nil {
			return nil, err
		}
		return pb, nil
	}
}

// decodePostProfileRequest converts a gRPC request to an endpoint request.
func decodePostProfileRequest(codec grpccodec.Codec) kitgrpc.DecodeRequestFunc {
	return func(_ context.Context, grpcReq interface{}) (interface{}, error) {
		var req PostProfileRequest
		pb := grpcReq.(*pb.PostProfileRequest)
		if err := codec.DecodeRequest(pb, &req); err != nil {
			return nil, err
		}
		return &req, nil
	}
}

// encodePostProfileResponse converts an endpoint response to a gRPC response.
func encodePostProfileResponse(codec grpccodec.Codec) kitgrpc.EncodeResponseFunc {
	return func(_ context.Context, response interface{}) (interface{}, error) {
		pb := new(pb.PostProfileResponse)
		resp := response.(*PostProfileResponse)
		if err := codec.EncodeResponse(resp, pb); err != nil {
			return nil, err
		}
		return pb, nil
	}
}

// decodePutProfileRequest converts a gRPC request to an endpoint request.
func decodePutProfileRequest(codec grpccodec.Codec) kitgrpc.DecodeRequestFunc {
	return func(_ context.Context, grpcReq interface{}) (interface{}, error) {
		var req PutProfileRequest
		pb := grpcReq.(*pb.PutProfileRequest)
		if err := codec.DecodeRequest(pb, &req); err != nil {
			return nil, err
		}
		return &req, nil
	}
}

// encodePutProfileResponse converts an endpoint response to a gRPC response.
func encodePutProfileResponse(codec grpccodec.Codec) kitgrpc.EncodeResponseFunc {
	return func(_ context.Context, response interface{}) (interface{}, error) {
		pb := new(pb.PutProfileResponse)
		resp := response.(*PutProfileResponse)
		if err := codec.EncodeResponse(resp, pb); err != nil {
			return nil, err
		}
		return pb, nil
	}
}
