codecs: NewCodecs()
tests:
  - name: PostProfile
    cases:
      - name: ok
        request:
          method: POST
          path: /profiles
          body: '{"profile": {"id": "1234", "name": "kun"}}'
        wantIn: |
          profile: Profile{
            ID: "1234",
            Name: "kun",
          },
        out: |
          err: nil,
        wantResponse:
          statusCode: http.StatusOK
          body: '{}'
      - name: err
        request:
          method: POST
          path: /profiles
          body: '{"profile": {"id": "1234", "name": "kun"}}'
        wantIn: |
          profile: Profile{
            ID: "1234",
            Name: "kun",
          },
        out: |
          err: ErrAlreadyExists,
        wantResponse:
          statusCode: http.StatusBadRequest
          body: '{"error":"already exists"}'
  - name: GetProfile
    cases:
      - name: ok
        request:
          method: GET
          path: /profiles/1234
        wantIn: |
          id: "1234",
        out: |
          profile: Profile{
            ID: "1234",
            Name: "kun",
          },
          err: nil,
        wantResponse:
          statusCode: http.StatusOK
          body: '{"profile":{"id":"1234","name":"kun"}}'
      - name: err
        request:
          method: GET
          path: /profiles/5678
        wantIn: |
          id: "5678",
        out: |
          profile: Profile{},
          err: ErrNotFound,
        wantResponse:
          statusCode: http.StatusNotFound
          body: '{"error":"not found"}'
  - name: PutProfile
    cases:
      - name: ok
        request:
          method: PUT
          path: /profiles/1234
          body: '{"profile": {"id": "1234", "name": "kun", "addresses": [{"id": "0", "location": "here"}]}}'
        wantIn: |
          id: "1234",
          profile: Profile{
            ID:   "1234",
            Name: "kun",
            Addresses: []Address{
              {
                ID:       "0",
                Location: "here",
              },
            },
          },
        out: |
          err: nil,
        wantResponse:
          statusCode: http.StatusOK
          body: '{}'
      - name: err
        request:
          method: PUT
          path: /profiles/1234
          body: '{"profile": {"id": "5678", "name": "kun", "addresses": [{"id": "0", "location": "here"}]}}'
        wantIn: |
          id: "1234",
          profile: Profile{
            ID:   "5678",
            Name: "kun",
            Addresses: []Address{
              {
                ID:       "0",
                Location: "here",
              },
            },
          },
        out: |
          err: ErrInconsistentIDs,
        wantResponse:
          statusCode: http.StatusBadRequest
          body: '{"error":"inconsistent IDs"}'
  - name: PatchProfile
    cases:
      - name: ok
        request:
          method: PATCH
          path: /profiles/1234
          body: '{"profile": {"id": "1234", "name": "kun", "addresses": [{"id": "?", "location": "where"}]}}'
        wantIn: |
          id: "1234",
          profile: Profile{
            ID:   "1234",
            Name: "kun",
            Addresses: []Address{
              {
                ID:       "?",
                Location: "where",
              },
            },
          },
        out: |
          err: nil,
        wantResponse:
          statusCode: http.StatusOK
          body: '{}'
      - name: err
        request:
          method: PATCH
          path: /profiles/1234
          body: '{"profile": {"id": "5678", "name": "wow"}}'
        wantIn: |
          id: "1234",
          profile: Profile{
            ID:   "5678",
            Name: "wow",
          },
        out: |
          err: ErrInconsistentIDs,
        wantResponse:
          statusCode: http.StatusBadRequest
          body: '{"error":"inconsistent IDs"}'
  - name: DeleteProfile
    cases:
      - name: ok
        request:
          method: DELETE
          path: /profiles/1234
        wantIn: |
          id: "1234",
        out: |
          err: nil,
        wantResponse:
          statusCode: http.StatusOK
          body: '{}'
      - name: err
        request:
          method: DELETE
          path: /profiles/5678
        wantIn: |
          id: "5678",
        out: |
          err: ErrNotFound,
        wantResponse:
          statusCode: http.StatusNotFound
          body: '{"error":"not found"}'
  - name: GetAddresses
    cases:
      - name: ok
        request:
          method: GET
          path: /profiles/1234/addresses
        wantIn: |
          id: "1234",
        out: |
          addresses: []Address{
            {
              ID:       "0",
              Location: "here",
            },
          },
          err: nil,
        wantResponse:
          statusCode: http.StatusOK
          body: '{"addresses":[{"id":"0","location":"here"}]}'
      - name: empty
        request:
          method: GET
          path: /profiles/5678/addresses
        wantIn: |
          id: "5678",
        out: |
          addresses: []Address{},
          err: nil,
        wantResponse:
          statusCode: http.StatusOK
          body: '{"addresses":[]}'
  - name: GetAddress
    cases:
      - name: ok
        request:
          method: GET
          path: /profiles/1234/addresses/0
        wantIn: |
          id: "1234",
          addressID: "0",
        out: |
          address: Address{
            ID:       "0",
            Location: "here",
          },
          err: nil,
        wantResponse:
          statusCode: http.StatusOK
          body: '{"address":{"id":"0","location":"here"}}'
      - name: err
        request:
          method: GET
          path: /profiles/1234/addresses/9
        wantIn: |
          id: "1234",
          addressID: "9",
        out: |
          address: Address{},
          err: ErrNotFound,
        wantResponse:
          statusCode: http.StatusNotFound
          body: '{"error":"not found"}'
  - name: PostAddress
    cases:
      - name: ok
        request:
          method: POST
          path: /profiles/1234/addresses
          body: '{"address": {"id": "0", "location": "here"}}'
        wantIn: |
          id: "1234",
          address: Address{
            ID:       "0",
            Location: "here",
          },
        out: |
          err: nil,
        wantResponse:
          statusCode: http.StatusOK
          body: '{}'
      - name: err
        request:
          method: POST
          path: /profiles/1234/addresses
          body: '{"address": {"id": "0", "location": "here"}}'
        wantIn: |
          id: "1234",
          address: Address{
            ID:       "0",
            Location: "here",
          },
        out: |
          err: ErrAlreadyExists,
        wantResponse:
          statusCode: http.StatusBadRequest
          body: '{"error":"already exists"}'
  - name: DeleteAddress
    cases:
      - name: ok
        request:
          method: DELETE
          path: /profiles/1234/addresses/0
        wantIn: |
          id: "1234",
          addressID: "0",
        out: |
          err: nil,
        wantResponse:
          statusCode: http.StatusOK
          body: '{}'
      - name: err
        request:
          method: DELETE
          path: /profiles/1234/addresses/9
        wantIn: |
          id: "1234",
          addressID: "9",
        out: |
          err: ErrNotFound,
        wantResponse:
          statusCode: http.StatusNotFound
          body: '{"error":"not found"}'
