// Code generated by kun; DO NOT EDIT.
// github.com/RussellLuo/kun

package usersvc

import (
	"context"

	"github.com/RussellLuo/kun/pkg/httpoption"
	"github.com/RussellLuo/validating/v2"
	"github.com/go-kit/kit/endpoint"
)

type CreateUserRequest struct {
	User User `json:"-"`
}

// ValidateCreateUserRequest creates a validator for CreateUserRequest.
func ValidateCreateUserRequest(newSchema func(*CreateUserRequest) validating.Schema) httpoption.Validator {
	return httpoption.FuncValidator(func(value interface{}) error {
		req := value.(*CreateUserRequest)
		return httpoption.Validate(newSchema(req))
	})
}

type CreateUserResponse struct {
	Result User  `json:"result"`
	Err    error `json:"-"`
}

func (r *CreateUserResponse) Body() interface{} { return r.Result }

// Failed implements endpoint.Failer.
func (r *CreateUserResponse) Failed() error { return r.Err }

// MakeEndpointOfCreateUser creates the endpoint for s.CreateUser.
func MakeEndpointOfCreateUser(s Service) endpoint.Endpoint {
	return func(ctx context.Context, request interface{}) (interface{}, error) {
		req := request.(*CreateUserRequest)
		result, err := s.CreateUser(
			ctx,
			req.User,
		)
		return &CreateUserResponse{
			Result: result,
			Err:    err,
		}, nil
	}
}
