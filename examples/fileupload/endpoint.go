// Code generated by kok; DO NOT EDIT.
// github.com/RussellLuo/kok

package fileupload

import (
	"context"

	"github.com/RussellLuo/kok/pkg/codec/httpcodec"
	"github.com/go-kit/kit/endpoint"
)

type UploadRequest struct {
	File *httpcodec.FormFile `json:"file"`
}

type UploadResponse struct {
	Err error `json:"-"`
}

func (r *UploadResponse) Body() interface{} { return r }

// Failed implements endpoint.Failer.
func (r *UploadResponse) Failed() error { return r.Err }

// MakeEndpointOfUpload creates the endpoint for s.Upload.
func MakeEndpointOfUpload(s Service) endpoint.Endpoint {
	return func(ctx context.Context, request interface{}) (interface{}, error) {
		req := request.(*UploadRequest)
		err := s.Upload(
			ctx,
			req.File,
		)
		return &UploadResponse{
			Err: err,
		}, nil
	}
}
