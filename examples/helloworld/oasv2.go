// Code generated by kok; DO NOT EDIT.
// github.com/RussellLuo/kok

package helloworld

import (
	"reflect"

	"github.com/RussellLuo/kok/pkg/oasv2"
)

var (
	base = `swagger: "2.0"
info:
  title: "No Title"
  version: "0.0.0"
  description: "Service is used for saying hello."
  license:
    name: "MIT"
host: "example.com"
basePath: "/"
schemes:
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json"
`

	paths = `
paths:
  /messages:
    post:
      description: "SayHello says hello to the given name."
      operationId: "SayHello"
      parameters: 
        - name: body
          in: body
          schema:
            $ref: "#/definitions/SayHelloRequestBody" 
      %s  
`
)

func getResponses(schema oasv2.Schema) []oasv2.OASResponses {
	return []oasv2.OASResponses{
		oasv2.GetOASResponses(schema, "SayHello", 200, &SayHelloResponse{}),
	}
}

func getDefinitions(schema oasv2.Schema) map[string]oasv2.Definition {
	defs := make(map[string]oasv2.Definition)

	oasv2.AddDefinition(defs, "SayHelloRequestBody", reflect.ValueOf(&struct {
		Name string `json:"name"`
	}{}))
	oasv2.AddResponseDefinitions(defs, schema, "SayHello", 200, (&SayHelloResponse{}).Body())

	return defs
}

func OASv2APIDoc(schema oasv2.Schema) string {
	resps := getResponses(schema)
	paths := oasv2.GenPaths(resps, paths)

	defs := getDefinitions(schema)
	definitions := oasv2.GenDefinitions(defs)

	return base + paths + definitions
}
